#BlueJ class context
comment0.target=MyArrayList
comment0.text=\n\ MyArrayList\ class\ that\ has\ methods\ to\ modify/access/create\ an\ ArrayList\n\ @param\ <E>\n\ @author\ Anu\ Datar\n\ @author\ Melody\ Yin\n\ @version\ 26/10/21\n
comment1.params=
comment1.target=MyArrayList()
comment1.text=\n\ constructor\ that\ initializes\ size\ and\ list\n\ @postcondition\ integer\ size\ and\ integer\ array\ values\ are\ intialized\n
comment10.params=
comment10.target=java.util.Iterator\ iterator()
comment10.text=\n\ instantiates\ new\ iterator\n\ @return\ new\ iterator\n\ @postcondition\ instantiates\ new\ iterator\n
comment11.params=
comment11.target=java.util.ListIterator\ listIterator()
comment11.text=\n\ instantiates\ new\ iterator\n\ @return\ new\ iterator\n\ @postcondition\ instantiates\ new\ iterator\n
comment12.params=index\ obj
comment12.target=void\ add(int,\ java.lang.Object)
comment12.text=\n\ inserts\ object\ at\ position\ index\n\ @param\ index\ specifies\ where\ to\ insert\ new\ value\n\ @param\ obj\ is\ the\ new\ value\ being\ added\n\ @return\n\ @precondition\ \ 0\ <\=\ index\ <\=\ size\n\ @postcondition\ inserts\ obj\ at\ position\ index,\n\ \ \ \ \ \ moving\ elements\ at\ position\ index\ and\ higher\n\ \ \ \ \ \ to\ the\ right\ (adds\ 1\ to\ their\ indices)\ and\ adjusts\ size\n
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=\n\ converts\ array\ to\ string\ for\ printing\n\ @return\ array\ converted\ into\ string\n
comment3.params=
comment3.target=void\ doubleCapacity()
comment3.text=\n\ doubles\ capacity\ of\ array\ if\ the\ current\ one\ is\ too\ short\ to\ store\ all\n\ \ \ \ \ \ of\ the\ elements\ entered\ by\ the\ user\n\ @postcondition\ replaces\ the\ array\ with\ one\ that\ is\ twice\ as\ long\ and\n\ copies\ all\ of\ the\ old\ elements\ into\ it\n
comment4.params=
comment4.target=int\ getCapacity()
comment4.text=\n\ returns\ the\ length\ of\ the\ array\n\ @return\ the\ length\ of\ the\ array\n
comment5.params=
comment5.target=int\ size()
comment5.text=\n\ returns\ number\ of\ elements\ in\ the\ list\ entered\ by\ the\ user\n\ @return\ list\ size\n
comment6.params=index
comment6.target=java.lang.Object\ get(int)
comment6.text=\n\ returns\ value\ in\ list\ at\ specified\ index\n\ @param\ index\ is\ the\ location\ of\ the\ element\ user\ is\ trying\ to\ retrieve\n\ @return\ value\ in\ list\ at\ specified\ index\n
comment7.params=index\ obj
comment7.target=java.lang.Object\ set(int,\ java.lang.Object)
comment7.text=\n\ replaces\ the\ element\ at\ position\ index\ with\ obj\n\ @param\ index\ is\ the\ location\ of\ the\ element\ to\ be\ changed\n\ @param\ obj\ is\ the\ value\ that\ the\ element\ is\ going\ to\ be\ replaced\ with\n\ @return\ element\ formerly\ at\ the\ specified\ position\n\ @postcondition\ element\ at\ specified\ index\ is\ replaced\ with\ specified\n\ \ \ \ \ \ \ \ \ \ value\n
comment8.params=obj
comment8.target=boolean\ add(java.lang.Object)
comment8.text=\n\ appends\ obj\ to\ end\ of\ list\n\ @param\ obj\ is\ added\ to\ the\ end\ of\ the\ list\n\ @return\ true\n\ @postcondition\ appends\ obj\ to\ end\ of\ list\n
comment9.params=index
comment9.target=java.lang.Object\ remove(int)
comment9.text=\n\ removes\ element\ from\ position\ index,\ moving\ elements\n\ \ \ \ \ \ at\ position\ index\ +\ 1\ and\ higher\ to\ the\ left\n\ \ \ \ \ \ (subtracts\ 1\ from\ their\ indices)\ and\ adjusts\ size\n\ \ \ \ \ \ returns\ the\ element\ formerly\ at\ the\ specified\ position\n\ @param\ index\ specifies\ location\ of\ element\ to\ be\ removed\n\ @return\ the\ element\ that\ was\ removed\ from\ the\ list\n\ @precondition\n\ @postcondition\ removes\ element\ from\ specified\ position\ in\ the\ list\n
numComments=13
