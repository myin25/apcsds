#BlueJ class context
comment0.target=Tetris
comment0.text=\n\ Simulates\ the\ Tetris\ game.\n\ Implements\ the\ ArrowListener\ interface\ in\ order\ to\ \n\n\ @author\ Melody\ Yin\n\ @version\ 3-10-22\n
comment1.params=
comment1.target=Tetris()
comment1.text=\n\ Initializes\ instance\ variables\ for\ a\ MyBoundedGrid<Block>\ grid\ and\ a\ \n\ \ \ \ \ \ BlockDisplay\ display,\ which\ keep\ track\ of\ the\ game\ and\ display\ it\n\ \ \ \ \ \ for\ the\ user.\ The\ grid\ defaults\ to\ 20\ rows\ and\ 10\ columns,\ and\ \n\ \ \ \ \ \ the\ display\ initializes\ as\ a\ blank\ black\ screen\ with\ the\ window\ \n\ \ \ \ \ \ title\ "Tetris".\n\ It\ then\ begins\ the\ game\ by\ initializing\ the\ active\ tetrad\ to\ a\ random\n\ \ \ \ \ \ tetrad\ and\ calling\ on\ the\ play()\ function,\ which\ will\ run\ the\n\ \ \ \ \ \ rest\ of\ the\ game.\n\ @postcondition\ Blank\ 10\ x\ 20\ Tetris\ board\ is\ created.\n
comment10.params=row
comment10.target=void\ clearRow(int)
comment10.text=\n\ Clears\ the\ given\ row\ and\ moves\ the\ rest\ of\ the\ blocks\ above\ the\ row\n\ \ \ \ \ \ down\ one\ row.\n\ @parameter\ row\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ row\ that\ is\ being\ removed\ from\ the\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ tetris\ grid\n\ @postcondition\ The\ row\ formerly\ at\ specified\ row\ has\ now\ been\ removed.\n
comment11.params=
comment11.target=boolean\ isGameOver()
comment11.text=\n\ @return\ true\ if\ the\ game\ is\ over,\ false\ otherwise\n
comment12.params=
comment12.target=void\ calculateScore()
comment12.text=\n\ Calculates\ player\ score\ (depends\ on\ how\ many\ rows\ cleared\ at\ once)\n
comment2.params=
comment2.target=void\ upPressed()
comment2.text=\n\ Whenever\ the\ window\ detects\ that\ an\ up\ arrow\ key\ has\ been\ pressed,\ it\ \n\ \ \ \ \ \ calls\ on\ this\ function\ in\ order\ to\ rotate\ the\ currently\ active\ \n\ \ \ \ \ \ tetrad\ 90\ degrees.\n\ @precondition\ The\ active\ tetrad\ has\ already\ been\ initialized.\n\ @postcondition\ The\ active\ tetrad\ has\ been\ rotated\ 90\ degrees.\n
comment3.params=
comment3.target=void\ rightPressed()
comment3.text=\n\ Whenever\ the\ window\ detects\ that\ a\ right\ arrow\ key\ has\ been\ pressed,\n\ \ \ \ \ \ it\ calls\ on\ this\ function\ in\ order\ to\ move\ the\ currently\ active\n\ \ \ \ \ \ tetrad\ one\ block\ to\ the\ right.\ It\ does\ this\ by\ calling\ on\ the\n\ \ \ \ \ \ translate(numRow,\ numCol)\ function,\ which\ moves\ each\ block\ in\n\ \ \ \ \ \ the\ currently\ active\ tetrad\ one\ to\ the\ right.\n\ @precondition\ The\ active\ tetrad\ has\ already\ been\ initialized.\n\ @postcondition\ The\ active\ tetrad\ has\ been\ translated\ one\ column\ to\ the\n\ \ \ \ \ \ right.\n
comment4.params=
comment4.target=void\ downPressed()
comment4.text=\n\ Whenever\ the\ window\ detects\ that\ a\ down\ arrow\ key\ has\ been\ pressed,\n\ \ \ \ \ \ it\ calls\ on\ this\ function\ in\ order\ to\ move\ the\ currently\ active\n\ \ \ \ \ \ tetrad\ one\ block\ down.\ It\ does\ this\ by\ calling\ on\ the\n\ \ \ \ \ \ translate(numRow,\ numCol)\ function,\ which\ moves\ each\ block\ in\n\ \ \ \ \ \ the\ currently\ active\ tetrad\ one\ down.\n\ @precondition\ The\ active\ tetrad\ has\ already\ been\ initialized.\n\ @postcondition\ The\ active\ tetrad\ has\ been\ translated\ one\ row\ down.\n
comment5.params=
comment5.target=void\ leftPressed()
comment5.text=\n\ Whenever\ the\ window\ detects\ that\ a\ left\ arrow\ key\ has\ been\ pressed,\n\ \ \ \ \ \ it\ calls\ on\ this\ function\ in\ order\ to\ move\ the\ currently\ active\n\ \ \ \ \ \ tetrad\ one\ block\ to\ the\ left.\ It\ does\ this\ by\ calling\ on\ the\n\ \ \ \ \ \ translate(numRow,\ numCol)\ function,\ which\ moves\ each\ block\ in\n\ \ \ \ \ \ the\ currently\ active\ tetrad\ one\ to\ the\ left.\n\ @precondition\ The\ active\ tetrad\ has\ already\ been\ initialized.\n\ @postcondition\ The\ active\ tetrad\ has\ been\ translated\ one\ column\ to\ the\n\ \ \ \ \ \ left.\n
comment6.params=
comment6.target=void\ spacePressed()
comment6.text=\n\ Whenever\ the\ window\ detects\ that\ a\ space\ key\ has\ been\ pressed,\n\ \ \ \ \ \ it\ calls\ on\ this\ function\ in\ order\ to\ repatedly\ move\ the\ \n\ \ \ \ \ \ currently\ active\ tetrad\ one\ block\ down\ until\ it's\ not\ possible\n\ \ \ \ \ \ to\ anymore.\ It\ does\ this\ by\ calling\ on\ the\ translate(numRow,\ \n\ \ \ \ \ \ numCol)\ function,\ which\ moves\ each\ block\ in\ the\ currently\ active\n\ \ \ \ \ \ tetrad\ one\ down.\n\ @precondition\ The\ active\ tetrad\ has\ already\ been\ initialized.\n\ @postcondition\ The\ active\ tetrad\ has\ been\ translated\ as\ far\ down\ as\n\ \ \ \ \ \ possible.\n
comment7.params=
comment7.target=void\ play()
comment7.text=\n\ Simulates\ the\ Tetris\ game.\ Called\ on\ by\ the\ Tetris\ constructor.\ While\n\ \ \ \ \ \ true,\ repeatedly\ pauses\ for\ 1\ second,\ translates\ the\ active\ \n\ \ \ \ \ \ tetrad\ down\ one\ row,\ and\ redraws\ the\ display.\ When\ the\ active\n\ \ \ \ \ \ tetrad\ has\ reached\ the\ bottom\ of\ the\ screen,\ it\ generates\ a\ new\n\ \ \ \ \ \ random\ tetrad\ and\ makes\ that\ the\ active\ tetrad.\n
comment8.params=
comment8.target=void\ clearCompletedRows()
comment8.text=\n\ Clears\ any\ row\ that\ the\ user\ has\ completed.\ Called\ after\ each\ active\n\ \ \ \ \ \ tetrad\ has\ finished\ falling\ by\ the\ play()\ method.\ It\ does\ this\n\ \ \ \ \ \ by\ determining\ for\ each\ row\ if\ it's\ completed.\ If\ it\ is,\ it\n\ \ \ \ \ \ calls\ on\ a\ helper\ method\ to\ remove\ the\ row.\n\ @postcondition\ All\ completed\ rows\ on\ the\ screen\ are\ removed\ and\ the\n\ \ \ \ \ \ rest\ of\ the\ blocks\ are\ moved\ down\ one.\n
comment9.params=row
comment9.target=boolean\ isComplete(int)
comment9.text=\n\ Determines\ if\ a\ row\ is\ complete\ (completely\ filled\ with\ blocks).\n\ @param\ row\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ row\ that\ we\ are\ checking\ for\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ completion\n\ @return\ true\ if\ the\ row\ is\ complete,\ false\ otherwise.\n
numComments=13
