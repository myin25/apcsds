#BlueJ class context
comment0.target=Piece
comment0.text=\n\ Represents\ a\ piece\ in\ chess\n\ @author\ Anu\ Datar\n\ @author\ Melody\ Yin\n\ @version\ 4-9-22\n
comment1.params=col\ fileName\ val
comment1.target=Piece(java.awt.Color,\ java.lang.String,\ int)
comment1.text=\n\ Constructs\ a\ new\ Piece\ with\ the\ given\ attributes\n\ @param\ col\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ color\ of\ the\ piece\n\ @param\ fileName\ \ \ \ \ \ \ \ \ \ pathway\ to\ image\ of\ the\ piece\n\ @param\ val\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ value\ of\ the\ piece\n
comment10.params=dest
comment10.target=boolean\ isValidDestination(Location)
comment10.text=\n\ @param\ dest\ \ \ \ \ \ \ \ \ \ the\ destination\ that\ is\ getting\ its\ validity\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ checked\n\ @return\ if\ the\ given\ destination\ is\ valid\ (if\ the\ destination\n\ \ \ \ \ \ is\ within\ the\ board's\ bounds\ and\ doesn't\ contain\ a\ piece\n\ \ \ \ \ \ of\ the\ same\ color)\n
comment11.params=
comment11.target=java.util.ArrayList\ destinations()
comment11.text=\n\ @return\ a\ list\ of\ possible\ destinations\ depending\ on\ the\ piece\n
comment12.params=dests\ direction
comment12.target=void\ sweep(java.util.ArrayList,\ int)
comment12.text=\n\ Recieves\ a\ list\ (may\ be\ empty,\ might\ not\ be\ empty)\ and\ adds\ all\ possible\n\ \ \ \ \ \ locations\ that\ a\ piece\ can\ reach\ in\ a\ given\ direction.\ \n\ @param\ dests\ \ \ \ \ \ \ \ \ list\ of\ possible\ places\ that\ a\ piece\ can\ reach\n\ @param\ direction\ \ \ \ \ the\ direction\ that\ the\ method\ is\ going\ to\ sweep\n
comment2.params=
comment2.target=Board\ getBoard()
comment2.text=\n\ @return\ the\ board\ this\ piece\ is\ on\n
comment3.params=
comment3.target=Location\ getLocation()
comment3.text=\n\ @return\ the\ location\ of\ this\ piece\ on\ the\ board\n
comment4.params=
comment4.target=java.awt.Color\ getColor()
comment4.text=\n\ @return\ the\ color\ of\ this\ piece\n
comment5.params=
comment5.target=java.lang.String\ getImageFileName()
comment5.text=\n\ @return\ the\ name\ of\ the\ file\ used\ to\ display\ this\ piece\n
comment6.params=
comment6.target=int\ getValue()
comment6.text=\n\ @return\ a\ number\ representing\ the\ relative\ value\ of\ this\ piece\n
comment7.params=brd\ loc
comment7.target=void\ putSelfInGrid(Board,\ Location)
comment7.text=\n\ Puts\ this\ piece\ into\ a\ board.\ If\ there\ is\ another\ piece\ at\ the\ given\n\ location,\ it\ is\ removed.\ <br\ />\n\ Precondition\:\ (1)\ This\ piece\ is\ not\ contained\ in\ a\ grid\ (2)\n\ <code>loc</code>\ is\ valid\ in\ <code>gr</code>\n\ @param\ brd\ the\ board\ into\ which\ this\ piece\ should\ be\ placed\n\ @param\ loc\ the\ location\ into\ which\ the\ piece\ should\ be\ placed\n
comment8.params=
comment8.target=void\ removeSelfFromGrid()
comment8.text=\n\ Removes\ this\ piece\ from\ its\ board.\ <br\ />\n\ Precondition\:\ This\ piece\ is\ contained\ in\ a\ board\n
comment9.params=newLocation
comment9.target=void\ moveTo(Location)
comment9.text=\n\ Moves\ this\ piece\ to\ a\ new\ location.\ If\ there\ is\ another\ piece\ at\ the\n\ given\ location,\ it\ is\ removed.\ <br\ />\n\ Precondition\:\ (1)\ This\ piece\ is\ contained\ in\ a\ grid\ (2)\n\ <code>newLocation</code>\ is\ valid\ in\ the\ grid\ of\ this\ piece\n\ @param\ newLocation\ the\ new\ location\n
numComments=13
