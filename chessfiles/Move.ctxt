#BlueJ class context
comment0.target=Move
comment0.text=\n\ Represents\ a\ single\ move,\ in\ which\ a\ piece\ moves\ to\ a\ destination\n\ location.\ Since\ a\ move\ can\ be\ undone,\ also\ keeps\ track\ of\ the\ source\n\ location\ and\ any\ captured\ victim.\n\ @author\ Anu\ Datar\n\ @version\ 4-8-22\n
comment1.params=piece\ destination
comment1.target=Move(Piece,\ Location)
comment1.text=\n\ Constructs\ a\ new\ move\ for\ moving\ the\ given\ piece\ to\ the\ given\n\ destination.\n\ @param\ piece\ \ \ \ \ \ \ \ \ \ \ \ \ the\ piece\ making\ the\ move\n\ @param\ destination\ \ \ \ \ \ \ the\ place\ that\ the\ piece\ is\ moving\ to\n\ @postcondition\ new\ Move\ object\ is\ created\ (but\ not\ necessarily\n\ executed\ yet)\n
comment2.params=
comment2.target=Piece\ getPiece()
comment2.text=\n\ @return\ the\ piece\ being\ moved\n
comment3.params=
comment3.target=Location\ getSource()
comment3.text=\n\ @return\ the\ location\ being\ moved\ from\n
comment4.params=
comment4.target=Location\ getDestination()
comment4.text=\n\ @return\ the\ location\ being\ moved\ to\n
comment5.params=
comment5.target=Piece\ getVictim()
comment5.text=\n\ @return\ the\ piece\ being\ captured\ at\ the\ destination,\ if\ any\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\n\ @return\ a\ string\ description\ of\ the\ move\n
comment7.params=x
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ @return\ true\ if\ this\ move\ is\ equivalent\ to\ the\ given\ one\n\ @param\ x\ \ \ \ \ \ \ \ \ \ \ \ \ the\ object\ being\ compared\ to\n
comment8.params=
comment8.target=int\ hashCode()
comment8.text=\n\ @return\ a\ hash\ code\ for\ this\ move,\ such\ that\ equivalent\ moves\ have\n\ the\ same\ hash\ code\n
numComments=9
